<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.deepdragon.entity.LogisticsCompanyMapper">

	<sql id="columnList">
		`id`,`name`,`sign`,`url`,`orderNo`,`description`,`createUser`,`createDate`,`modifyUser`,`modifyDate`,platform
	</sql>

	<select id="get" resultType="net.deepdragon.entity.LogisticsCompany">
		select
		<include refid="columnList" />
		from shared_logistics_company
		where id = #{id} and platform = #{platform}
	</select>

	<select id="find" resultType="net.deepdragon.entity.LogisticsCompany">
		select
		<include refid="columnList" />
		from shared_logistics_company
		where ${property}=#{value} and platform = #{platform}
	</select>

	<select id="findList" resultType="net.deepdragon.entity.LogisticsCompany">
		select
		<include refid="columnList" />
		from shared_logistics_company
		where ${property}=#{value} and platform = #{platform}
	</select>
	
	<select id="findListByIds" parameterType="java.lang.String"
		resultType="net.deepdragon.entity.LogisticsCompany">
		select
		<include refid="columnList" />
		from shared_logistics_company
		where id in
		<foreach collection="list" item="id" index="index" open="("	close=")" separator=",">#{id}</foreach>
		and platform = #{platform}
	</select>
	
	<select id="getAll" resultType="net.deepdragon.entity.LogisticsCompany">
		select
		<include refid="columnList" />
		from shared_logistics_company
		where platform = #{platform}
	</select>
	
	<select id="getPager" resultType="net.deepdragon.entity.LogisticsCompany">
		select
		<include refid="columnList" />
		from shared_logistics_company 
		<if test="(@net.deepdragon.util.OgnlUtils@isEmpty(condition))!=null">${condition}</if>
	</select>
	
	<select id="getList" resultType="net.deepdragon.entity.LogisticsCompany">
		select
		<include refid="columnList" />
		from shared_logistics_company 
		<if test="(@net.deepdragon.util.OgnlUtils@isEmpty(condition))!=null">${condition}</if>
	</select>

	<select id="getTotalCount" resultType="java.lang.Long">
		select count(id) as result
		from shared_logistics_company
		where platform = #{platform}
	</select>
	
	<select id="isExist" resultType="java.lang.Boolean">
		select count(id) as result from shared_logistics_company 
		where ${property}=#{value} and platform = #{platform}
	</select>
	
	<insert id="save" parameterType="net.deepdragon.entity.LogisticsCompany"
		useGeneratedKeys="true" keyProperty="id">
		insert into shared_logistics_company
		<trim prefix="(" suffix=")" suffixOverrides=",">
			`id`,`platform`
			<if test="name != null">,`name`</if>
			<if test="sign != null">,`sign`</if>
			<if test="url != null">,`url`</if>
			<if test="orderNo != null">,`orderNo`</if>
			<if test="description != null">,`description`</if>
			<if test="createUser != null">,`createUser`</if>
			<if test="createDate != null">,`createDate`</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id},#{platform}
			<if test="name != null">,#{name}</if>
			<if test="sign != null">,#{sign}</if>
			<if test="url != null">,#{url}</if>
			<if test="orderNo != null">,#{orderNo}</if>
			<if test="description != null">,#{description}</if>
			<if test="createUser != null">,#{createUser}</if>
			<if test="createDate != null">,#{createDate}</if>
		</trim>
	</insert>

	<update id="update" parameterType="net.deepdragon.entity.LogisticsCompany">
		update shared_logistics_company
		<set>
			`platform` = #{platform}
			<if test="name != null">`name` = #{name},</if>
			<if test="sign != null">`sign` = #{sign},</if>
			<if test="url != null">`url` = #{url},</if>
			<if test="orderNo != null">`orderNo` = #{orderNo},</if>
			<if test="description != null">`description` = #{description},</if>
			<if test="modifyUser != null">`modifyUser` = #{modifyUser},</if>
			<if test="modifyDate != null">`modifyDate` = #{modifyDate}</if>
		</set>
		where id = #{id}
	</update>

	<delete id="delete">
		delete from shared_logistics_company
		where id =	#{id}
		and platform = #{platform}
	</delete>
	
</mapper>
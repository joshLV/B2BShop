<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<display-name>Weipu Web-Admin Application</display-name>

	<!-- Spring application context loader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/spring*.xml</param-value>
	</context-param>
	<!-- log4j -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>600000</param-value>
	</context-param>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>weipu.webadmin.root</param-value>
	</context-param>

	<!-- 加载Spring容器配置 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>net.deepdragon.weipu.listeners.ApplicationContextListener</listener-class>
	</listener>

	<!-- 银联支付 -->
	<servlet>
		<servlet-name>InitServlet</servlet-name>
		<servlet-class>com.unionpay.acp.servlet.InitServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/controller-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
		
	</servlet-mapping>
	
	<!-- Spring编码转换 -->
	<filter>
		<filter-name>Set Character Encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<!-- 强制进行转码 -->
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Set Character Encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- kaptchaFilter -->
	<filter>
		<filter-name>kaptchaFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<!--<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>kaptchaFilter</param-value>
		</init-param>-->
	</filter>
	<filter-mapping>
		<filter-name>kaptchaFilter</filter-name>
		<url-pattern>/captcha.jpg</url-pattern>
	</filter-mapping>
	
	<!-- shiroFilter -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/admin/*</url-pattern>
	</filter-mapping>
 	
 	<!-- UrlRewriteFilter配置 -->
	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>
	    	<param-name>logLevel</param-name>
	    	<param-value>INFO</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>*.html</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	
	<!-- 浏览器不支持put,delete等method,由该filter将/blog?_method=delete转换为标准的http delete方法 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>springmvc</servlet-name>
	</filter-mapping>
	
	<!-- 分布式Session的过滤器
	<filter>
		<filter-name>SessionFilter</filter-name>
		<filter-class>net.viservice.session.filter.ViserviceSessionFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
	
	<!-- 防止XSS和SQL注入攻击 <filter> <filter-name>XssSqlFilter</filter-name> <filter-class>com.baoyuan.filter.XssSqlFilter</filter-class> 
		<init-param> <param-name>ignoreUrl</param-name> <param-value>delete,template</param-value> 
		</init-param> </filter> <filter-mapping> <filter-name>XssSqlFilter</filter-name> 
		<url-pattern>/*</url-pattern> <dispatcher>REQUEST</dispatcher> </filter-mapping> -->

	<filter>
		<filter-name>gzipFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>gzipFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>gzipFilter</filter-name>
		<url-pattern>*.css</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>gzipFilter</filter-name>
		<url-pattern>*.js</url-pattern>
	</filter-mapping>
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>500</error-code>
		<location>/html/500.html</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/html/404.html</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/html/403.html</location>
	</error-page>

	<error-page>
		<exception-type>javax.servlet.ServletException</exception-type>
		<location>/html/error.html</location>
	</error-page>
	
 	<!--<servlet>
		<servlet-name>default</servlet-name>
		<servlet-class>org.eclipse.jetty.servlet.DefaultServlet</servlet-class>
		<init-param>
			<param-name>useFileMappedBuffer</param-name>
			<param-value>false</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>-->

</web-app>
